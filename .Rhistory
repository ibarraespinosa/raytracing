b$ksm[] <= 0, NA, b$ksm[])
cores <- c("#ff0000","#ff5a00","#ff9a00","#ffce00","#f0ff00")
filled.contour(b$ksm[, -c(1:5, 69:73)] ,
#col = rev(heat.colors(16)),
col = rev(colorRampPalette(cores, bias = 0.5)(20)),
main = "R")
output <- paste0(tempfile(), ".nc")
b <- betaks(u = input, ofile = output)
main = "Ks")
graphics::filled.contour(b$ksm[, -c(1:5, 69:73)] ,
col = rev(colorRampPalette(cores, bias = 0.5)(20)),
main = "Ks")
b <- betaks(u = input)
b$ksm[] <- ifelse(b$ksm[] >= 16 |
b$ksm[] <= 0, NA, b$ksm[])
cores <- c("#ff0000","#ff5a00","#ff9a00","#ffce00","#f0ff00")
graphics::filled.contour(b$ksm[, -c(1:5, 69:73)] ,
col = rev(colorRampPalette(cores, bias = 0.5)(20)),
main = "Ks")
# u is NetCDF and lat and lon characters
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(u = input)
b$ksm[] <- ifelse(b$ksm[] >= 16 |
b$ksm[] <= 0, NA, b$ksm[])
cores <- c("#ff0000","#ff5a00","#ff9a00","#ffce00","#f0ff00")
graphics::filled.contour(b$ksm[, -c(1:5, 69:73)] ,
col = rev(colorRampPalette(cores, bias = 0.5)(20)),
main = "Ks")
u <- readBin("../STF_teste/u.gra",
what = numeric(),
size = 4,
n = 145*73*4)
lat <- seq(-90, 90, 2.5)
lon <- seq(-180, 180, 2.5)
u <- matrix(u,
nrow = length(lon),
ncol = length(lat))
b <- betaks(u, lat, lon)
# ks
kf <- readBin("../STF_teste/ks.gra",
what = numeric(),
size = 4,
n = 145*73*4)
kf <- matrix(kf,
nrow = length(lon),
ncol = length(lat))
filled.contour(b$ksm[, -c(1:5, 69:73)] ,
col = rainbow(30),
main = "R")
filled.contour(kf[, -c(1:5, 69:73)],
col = rainbow(30),
main = "F77")
filled.contour(b$ksm[, -c(1:5, 69:73)] -
kf[, -c(1:5, 69:73)], col = rainbow(14))
# beta
setwd("/home/amanda/Documents/2020_AUSTRALIA/")
ifile <- "COELHOETAL2015/TRACING_v2/dados/uwnd.mon.mean_200hPa_2014JFM.nc"
ncu <- ncdf4::nc_open(filename = ifile)
uwnd <- ncdf4::ncvar_get(nc = ncu, varid = "uwnd")
lat <- ncdf4::ncvar_get(nc = ncu, varid = "lat")
lon <- ncdf4::ncvar_get(nc = ncu, varid = "lon")
ncdf4::nc_close(ncu)
dy <- abs(lat[2] - lat[1])
nlat <- dim(lat)
nlon <- dim(lon)
u <- uwnd[,73:1]
# flip_uwnd <- flip(uwnd, direction = "y") # column first --> byrow = T
uv <- as.vector(u)
head(uv)
u[1:5,1]
image(u)
writeBin(con = "STF_teste/uwnd.mon.mean_200hPa_2014JFM.bin",
object = uv,
size = 4,
endian = "little")
rm(list = ls())
# Testa se escreveu direito
# u <- readBin("STF_teste/coelho.gra",
u <- readBin("STF_teste/uwnd.mon.mean_200hPa_2014JFM.bin",
what = numeric(),
size = 4,
n = 73*144,
endian = "little")
m <- matrix(u, ncol = 73, nrow = 144)
filled.contour(m)
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.bin",
package = "raytracing")
u <- readBin(input,
what = numeric(),
size = 4,
n = 144*73*4) # Change here!
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.bin",
package = "raytracing")
u <- readBin(input,
what = numeric(),
size = 4,
n = 144*73*4) # Change here!
devtools::load_all("raytracing")
library(raytracing)
rm(list = ls());graphics.off()
gc()
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.bin",
package = "raytracing")
u <- readBin(input,
what = numeric(),
size = 4,
n = 144*73*4)
lat <- seq(-90, 90, 2.5)
lon <- seq(-180, 180, 2.5)
u <- matrix(u,
nrow = length(lon),
ncol = length(lat))
image(u)
length(lon)
setwd("/home/amanda/Documents/2020_AUSTRALIA/")
ifile <- "COELHOETAL2015/TRACING_v2/dados/uwnd.mon.mean_200hPa_2014JFM.nc"
ncu <- ncdf4::nc_open(filename = ifile)
uwnd <- ncdf4::ncvar_get(nc = ncu, varid = "uwnd")
lat <- ncdf4::ncvar_get(nc = ncu, varid = "lat")
lon <- ncdf4::ncvar_get(nc = ncu, varid = "lon")
ncdf4::nc_close(ncu)
dy <- abs(lat[2] - lat[1])
nlat <- dim(lat)
nlon <- dim(lon)
nlon
nlat
u <- uwnd[,73:1]
# flip_uwnd <- flip(uwnd, direction = "y") # column first --> byrow = T
uv <- as.vector(u)
head(uv)
writeBin(con = "STF_teste/uwnd.mon.mean_200hPa_2014JFM.bin",
object = uv,
size = 4,
endian = "little")
u <- readBin(input,
what = numeric(),
size = 4,
n = 144*73*4)
lon <- seq(-180, 180 - 1, 2.5)
lon
image(u)
u <- matrix(u,
nrow = length(lon),
ncol = length(lat))
image(u)
setwd("/home/amanda/Documents/2020_AUSTRALIA/")
ifile <- "COELHOETAL2015/TRACING_v2/dados/uwnd.mon.mean_200hPa_2014JFM.nc"
ncu <- ncdf4::nc_open(filename = ifile)
uwnd <- ncdf4::ncvar_get(nc = ncu, varid = "uwnd")
lat <- ncdf4::ncvar_get(nc = ncu, varid = "lat")
lon <- ncdf4::ncvar_get(nc = ncu, varid = "lon")
ncdf4::nc_close(ncu)
dy <- abs(lat[2] - lat[1])
nlat <- dim(lat)
nlon <- dim(lon)
u <- uwnd[,73:1]
# flip_uwnd <- flip(uwnd, direction = "y") # column first --> byrow = T
uv <- as.vector(u)
head(uv)
u[1:5,1]
u <- readBin("STF_teste/uwnd.mon.mean_200hPa_2014JFM.bin",
what = numeric(),
size = 4,
n = 73*144,
endian = "little")
m <- matrix(u, ncol = 73, nrow = 144)
filled.contour(m)
rm(list = ls())
graphics.off()
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.bin",
package = "raytracing")
u <- readBin(input,
what = numeric(),
size = 4,
n = 144*73*4)
lat <- seq(-90, 90, 2.5)
lon <- seq(-180, 180 - 1, 2.5)
u <- matrix(u,
nrow = length(lon),
ncol = length(lat))
graphics::filled.contour(u, main = "Zonal Wind Speed [m/s]")
b <- betaks(u, lat, lon)
b
b$ksm[] <- ifelse(b$ksm[] >= 16 |
b$ksm[] <= 0, NA, b$ksm[])
cores <- c("#ff0000","#ff5a00","#ff9a00","#ffce00","#f0ff00")
graphics::filled.contour(b$ksm[, -c(1:5, 69:73)] ,
col = rev(colorRampPalette(cores, bias = 0.5)(20)),
main = "Ks")
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(u = input)
b$ksm[] <- ifelse(b$ksm[] >= 16 |
b$ksm[] <= 0, NA, b$ksm[])
cores <- c("#ff0000","#ff5a00","#ff9a00","#ffce00","#f0ff00")
graphics::filled.contour(b$ksm[, -c(1:5, 69:73)] ,
col = rev(colorRampPalette(cores, bias = 0.5)(20)),
main = "Ks")
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(u = input)
b$ksm[] <- ifelse(b$ksm[] >= 16 |
b$ksm[] <= 0, NA, b$ksm[])
cores <- c("#ff0000","#ff5a00","#ff9a00","#ffce00","#f0ff00")
graphics::filled.contour(b$ksm[, -c(1:5, 69:73)] ,
col = rev(colorRampPalette(cores, bias = 0.5)(20)),
main = "Ks (usando NetCDF)")
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.bin",
package = "raytracing")
u <- readBin(input,
what = numeric(),
size = 4,
n = 144*73*4)
lat <- seq(-90, 90, 2.5)
lon <- seq(-180, 180 - 1, 2.5)
u <- matrix(u,
nrow = length(lon),
ncol = length(lat))
graphics::filled.contour(u, main = "Zonal Wind Speed [m/s]")
b <- betaks(u, lat, lon)
b$ksm[] <- ifelse(b$ksm[] >= 16 |
b$ksm[] <= 0, NA, b$ksm[])
cores <- c("#ff0000","#ff5a00","#ff9a00","#ffce00","#f0ff00")
graphics::filled.contour(b$ksm[, -c(1:5, 69:73)] ,
col = rev(colorRampPalette(cores, bias = 0.5)(20)),
main = "Ks")
devtools::load_all("raytracing")
library(raytracing)
library(raytracing)
library(raytracing)
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(u = input, plots = TRUE)
devtools::load_all("raytracing")
library(raytracing)
library(raytracing)
devtools::load_all("raytracing")
devtools::load_all("raytracing")
library(raytracing)
library(raytracing)
citation("ncdf4")
rm(list = ls()); graphics.off(); gc()
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(u = input)
rt <- ray_source(betam = b$betam,
u = b$u,
lat = b$lat,
K = 3,
itime = 10*4,
x0 = -c(130, 135),
y0 = -30,
dt = 6,
direction = -1,
interpolation = "trin")
l <- split(rt, rt$id)
dl <- lapply(seq_along(l), function(i){
sf::st_as_sf(sf::st_set_geometry(l[[i]], NULL),
geometry = ray_path(x = l[[i]]$lon,
y = l[[i]]$lat))
library(raytracing)
library(ggplot2)
ww <- map_data('world', ylim=c(-60,60))
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_polygon(data = ww,
aes(x = long, y = lat, group = group),
alpha = 0.0, col = "grey")
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(u = input)
rt <- ray_source(betam = b$betam,
u = b$u,
lat = b$lat,
K = 3,
itime = 10*4,
x0 = -c(130, 135),
y0 = -30,
dt = 6,
direction = -1,
interpolation = "trin")
l <- split(rt, rt$id)
dl <- lapply(seq_along(l), function(i){
sf::st_as_sf(sf::st_set_geometry(l[[i]], NULL),
geometry = ray_path(x = l[[i]]$lon,
y = l[[i]]$lat))
})
rp2 <- do.call("rbind", dl)
xrp <- rbind(rt, rp2)
rp <- ray_path(rt$lon, rt$lat)
class(rp)
rp2
xrp
names(crp)
names(xrp)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat), size = 3)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat, color = "lat_ini"), size = 3)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat, col = "lat_ini"), size = 3)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat, col = as.factor("lat_ini")), size = 3)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat, group = as.factor("lat_ini")), size = 3)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat), col = as.factor("lat_ini"),size = 3)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat, col = as.factor(lat_ini)), size = 3)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat, col = as.factor(lon_ini)), size = 3)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat, col = as.factor(lon_ini)), size = 3) +
geom_line(data = rp)
ggplot() +  theme_bw() +
geom_line(data = rp)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat, col = as.factor(lon_ini)), size = 3) +
geom_sf(data = rp, aes())
rm(list = ls()); graphics.off(); gc()
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(u = input)
rt <- ray_source(betam = b$betam,
u = b$u,
lat = b$lat,
K = 3,
itime = 10*4,
x0 = -c(130, 135),
y0 = -30,
dt = 6,
direction = -1,
interpolation = "trin")
l <- split(rt, rt$id)
dl <- lapply(seq_along(l), function(i){
sf::st_as_sf(sf::st_set_geometry(l[[i]], NULL),
geometry = ray_path(x = l[[i]]$lon,
y = l[[i]]$lat))
})
rp2 <- do.call("rbind", dl)
xrp <- rbind(rt, rp2)
rp <- ray_path(rt$lon, rt$lat)
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_point(data = xrp,
aes(x = lon, y = lat, col = as.factor(lon_ini)), size = 3) +
geom_sf(data = rp, aes())
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_sf(data = rp, aes(col = as.factor(lon_ini)))
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_sf(data = rp, aes(col = as.factor(lon_ini)))
rp
xrp <- rbind(xrp, ro)
xrp <- rbind(xrp, rp)
xrp <- cbind(xrp, rp)
ww <- sf::st_as_sf(maps::map(plot = FALSE, fill = TRUE))
ww <- sf::st_union(ww)
plot(ww,
reset = FALSE,
axes = TRUE,
graticule = TRUE,
col = "grey",
main = "Coelho et al. (2015): JFM/2015")
plot(rp2["lon_ini"],
add = TRUE,
cex = 10,
pal = colorRampPalette(c("black", "blue")))
```r
ww <- sf::st_as_sf(maps::map(plot = FALSE, fill = TRUE))
ww <- sf::st_union(ww)
plot(ww,
reset = FALSE,
axes = TRUE,
graticule = TRUE,
col = "grey",
main = "Coelho et al. (2015): JFM/2015")
plot(rp2["lon_ini"],
add = TRUE,
cex = 10,
pal = colorRampPalette(c("black", "blue")))
```
```r
ww <- sf::st_as_sf(maps::map(plot = FALSE, fill = TRUE))
ww <- sf::st_union(ww)
plot(ww,
reset = FALSE,
axes = TRUE,
graticule = TRUE,
col = "grey",
main = "Coelho et al. (2015): JFM/2015")
plot(rp2["lon_ini"],
add = TRUE,
cex = 10,
pal = colorRampPalette(c("black", "blue")))
```
devtools::load_all(".")
devtools::load_all(".")
library(raytracing)
library(raytracing)
citation(ncdf4)
citation("ncdf4")
citation("sf")
rm(list = ls()); graphics.off(); gc()
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(u = input)
rt <- ray_source(betam = b$betam,
u = b$u,
lat = b$lat,
K = 3,
itime = 10*4,
x0 = -c(130, 135),
y0 = -30,
dt = 6,
direction = -1,
interpolation = "trin")
l <- split(rt, rt$id)
dl <- lapply(seq_along(l), function(i){
sf::st_as_sf(sf::st_set_geometry(l[[i]], NULL),
geometry = ray_path(x = l[[i]]$lon,
y = l[[i]]$lat))
})
rp2 <- do.call("rbind", dl)
xrp <- rbind(rt, rp2)
rp <- ray_path(rt$lon, rt$lat)
# Plot:
ww <- sf::st_as_sf(maps::map(plot = FALSE, fill = TRUE))
ww <- sf::st_union(ww)
plot(ww,
reset = FALSE,
axes = TRUE,
graticule = TRUE,
col = "grey",
main = "Coelho et al. (2015): JFM/2014")
plot(rp2["lon_ini"],
add = TRUE,
cex = 10,
pal = colorRampPalette(c("black", "blue")))
plot(rp2["lon_ini"],
add = TRUE,
cex = 30,
pal = colorRampPalette(c("black", "blue")))
plot(rp2["lon_ini"],
add = TRUE,
cex = 50,
pal = colorRampPalette(c("black", "blue")))
plot(rp2["lon_ini"],
add = TRUE,
cex = 1,
pal = colorRampPalette(c("black", "blue")))
plot(ww,
reset = FALSE,
axes = TRUE,
graticule = TRUE,
col = "grey",
main = "Coelho et al. (2015): JFM/2014")
plot(rp2["lon_ini"],
add = TRUE,
lwd = 3,
pal = colorRampPalette(c("black", "blue")))
plot(rp2["lon_ini"],
add = TRUE,
lwd = 2,
pal = colorRampPalette(c("black", "blue")))
plot(ww,
reset = FALSE,
axes = TRUE,
graticule = TRUE,
col = "grey",
main = "Coelho et al. (2015): JFM/2014")
plot(rp2["lon_ini"],
add = TRUE,
lwd = 2,
pal = colorRampPalette(c("black", "blue")))
devtools::load_all(".")
library(raytracing)
