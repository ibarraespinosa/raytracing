sessionInfo()
.libPaths()
install.packages("pkgdown")
remotes::install_github("ropenscilabs/travis")
usethis::use_testthat()
use_test()
usethis::use_test()
install.packages("vein")
install.packages("covr")
install.packages("covr")
usethis::use_test()
usethis::use_testthat()
input <- system.file("extdata",
"uwnd.mon.mean_300hPa_1997-98DJF.nc",
package = "raytracing")
b <- betaks(ifile = input)
devtools::load_all(".")
b <- betaks(ifile = input)
a <- raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 10,
x0 = -130 + 360,
y0 = -17,
dt = 12 * 60 * 60,
direction = -1)
a
a$K[1]
a$l2_y1
a$umz_y1
round(a$umz_y1[1])
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
a <- raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 10,
x0 = -130 + 360,
y0 = -15,
dt = 6 * 60 * 60,
direction = -1)
test_that("Raytracing works", {
expect_equal(round(a$umz_y1[1]), 5)
})
a$umz_y1[1]
test_that("Raytracing works", {
expect_equal(round(a$umz_y1[1]), 1)
})
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
a <- raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 10,
x0 = -130 + 360,
y0 = -15,
dt = 6 * 60 * 60,
direction = -1)
test_that("Raytracing works", {
expect_equal(round(a$umz_y1[1]), 1)
})
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
a <- raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 10,
x0 = -130 + 360,
y0 = -15,
dt = 6 * 60 * 60,
direction = -1)
test_that("Raytracing works", {
expect_equal(round(a$umz_y1[1]), 2)
})
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
a <- raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 30,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1)
a$umz_y1
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
a <- raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 30,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1)
test_that("Raytracing works", {
expect_equal(round(a$umz_y1[1]), 22)
})
devtools::load_all(".")
library(raytracing)
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
a <- raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 30,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1)
test_that("Raytracing works", {
expect_equal(round(a$umz_y1[1]), 22)
expect_message(raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 30,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1),
"x & y differences almost 0")
})
devtools::load_all(".")
library(raytracing)
library(raytracing)
# ypos function test ####
ypos(y = -30,
lat = seq(-90, 90, 2.5))
# ypos function test ####
test_that("ypos works", {
expect_equal(ypos(y = -30,
lat = seq(-90, 90, 2.5))
, 25)
})
test_that("ypos works", {
expect_equal(ypos(y = -30,
lat = seq(-90, 90, 2.5))
, 25)
})
# ypos function test ####
test_that("ypos works", {
expect_equal(ypos(y = -30,
lat = seq(-90, 90, 2.5)),
25)
})
devtools::test_file()
expect_error(ypos(y = -130,
lat = seq(-90, 90, 2.5)),
NA)
# ypos function test ####
test_that("ypos works", {
expect_equal(ypos(y = -30,
lat = seq(-90, 90, 2.5)),
25)
expect_error(ypos(y = -130,
lat = seq(-90, 90, 2.5)),
NA)
})
devtools::test_file()
devtools::test_file()
# ypos function test ####
test_that("ypos works", {
expect_equal(ypos(y = -30,
lat = seq(-90, 90, 2.5)),
25)
expect_error(ypos(y = -91,
lat = seq(-90, 90, 2.5)),
1)
})
# raytracing function test ####
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
a <- raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 30,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1)
test_that("Raytracing works", {
expect_equal(round(a$umz_y1[1]), 22)
expect_message(raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 30,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1),
"x & y differences almost 0")
})
install.packages("covr")
library(covr)
report()
# betaks function test ####
betaks(plots = TRUE)
# betaks function test ####
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input, plots = TRUE)
report()
warnings()
is.unsorted(b$lat)
b$lat
report()
is.unsorted(b$lat)
# Test the if's
test_that("betaks if's works", {
expect_condition(if(is.unsorted(lat)) {phi <- -lat}
else {phi <- lat},
TRUE)
})
if(is.unsorted(lat)) {phi <- -lat}
else {phi <- lat}
if(is.unsorted(lat)) {phi <- -lat} else {phi <- lat}
expect_condition(if(is.unsorted(b$lat)) {phi <- -b$lat} else {phi <- b$lat},
TRUE)
# Test the if's
test_that("betaks if's works", {
expect_condition(if(is.unsorted(b$lat)) {phi <- -b$lat} else {phi <- b$lat},
TRUE)
})
b
# Test the plots
b <- betaks(ifile = input, plots = TRUE)
b$lat
rm(list = ls())
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
lat
b$lat
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
rm(list = ls())
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
ifile=input
varname = "uwnd"
latname = "lat"
lonname = "lon"
a = 6371000
plots = FALSE
show.warnings = FALSE
ncu <- ncdf4::nc_open(filename = ifile)
uwnd <- ncdf4::ncvar_get(nc = ncu, varid = varname)
lat <- ncdf4::ncvar_get(nc = ncu, varid = latname)
lon <- ncdf4::ncvar_get(nc = ncu, varid = lonname)
ncdf4::nc_close(ncu)
dx <- abs(lon[2] - lon[1])
dy <- abs(lat[2] - lat[1])
nlat <- dim(lat)
nlon <- dim(lon)
# Define parameters and constants
if(is.unsorted(lat)) {phi <- -lat} else {phi <- lat}
lat
phi
lat
phi
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
b$lat
ifile
ncu <- ncdf4::nc_open(filename = ifile)
uwnd <- ncdf4::ncvar_get(nc = ncu, varid = varname)
lat <- ncdf4::ncvar_get(nc = ncu, varid = latname)
lat
is.unsorted(lat)
devtools::load_all(".")
library(raytracing)
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
report()
devtools::load_all(".")
library(raytracing)
library(raytracing)
report()
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
devtools::load_all(".")
library(raytracing)
ls
ls()
rm(list = ls())
ls()
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
b$lat
devtools::load_all(".")
report()
report()
devtools::load_all(".")
library(raytracing)
library(raytracing)
report()
report()
devtools::load_all(".")
library(raytracing)
report()
report()
report()
report()
a <- raytracing(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 20,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1,
ofile = tempfile())
report()
report()
report()
report()
library(vein)
?vein
devtools::load_all(".")
library(raytracing)
devtools::load_all(".")
library(raytracing)
library(raytracing)
?`raytracing-package`
?raytracing
devtools::load_all(".")
library(raytracing)
library(raytracing)
?`raytracing-package`
?raytracing
devtools::load_all(".")
library(raytracing)
library(raytracing)
?raytracing
devtools::load_all(".")
devtools::load_all(".")
library(raytracing)
library(raytracing)
# ray function test ####
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "ray")
b <- betaks(ifile = input)
a <- ray(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 6,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1,
ofile = tempfile())
# ray function test ####
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "ray")
# ray function test ####
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
a <- ray(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 6,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1,
ofile = tempfile())
devtools::load_all(".")
library(raytracing)
?raytrcing
devtools::load_all(".")
library(raytracing)
library(raytracing)
?raytrcing
?raytracing
?`raytracing-package`
?ray
args(calcUg)
args(calcVg)
args(betaks)
args(ray)
args(ypos)
devtools::load_all(".")
library(raytracing)
install.packages("travis")
knitr::opts_chunk$set(echo = TRUE)
r pressure
citation(raytracing)
citation("raytracing")
citation("ggplot2")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(raytracing)
library(raytracing)
library(raytracing)
citation("raytracing")
devtools::load_all(".")
library(raytracing)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(raytracing)
library(raytracing)
source('~/.active-rstudio-document', echo=TRUE)
?raytracing
?ray
knitr::opts_chunk$set(echo = TRUE)
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "ray")
b <- betaks(ifile = input)
library(raytring)
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "ray")
library(raytracing)
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "ray")
b <- betaks(ifile = input)
a <- ray(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 30,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1)
a$x2 <- a$x0 - 360
library(raytracing)
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "ray")
input <- system.file("extdata",
"uwnd.mon.mean_200hPa_2014JFM.nc",
package = "raytracing")
b <- betaks(ifile = input)
a <- ray(betamz = colMeans(b$betam, na.rm = TRUE),
umz = colMeans(b$um, na.rm = TRUE),
lat = b$lat,
K = 3,
itime = 30,
x0 = -135 + 360,
y0 = -30,
dt = 6 * 60 * 60,
direction = -1)
a$x2 <- a$x0 - 360
library(ggplot2)
ww <- map_data('world', ylim=c(-60,60))
ggplot() +  theme_bw() +
scale_y_continuous(limits = c(-60,60)) +
geom_polygon(data = ww,
aes(x = long, y = lat, group = group),
alpha = 0.0, col = "grey") +
geom_point(data = a[!(a$tun_y0 == -1 |
a$tun_y1 == -1 | a$id == 0), ],
aes(x = x2, y = y0), size = 3) +
geom_line(data = a[!(a$tun_y0 == -1 |
a$tun_y1 == -1 | a$id == 0), ],
aes(x = x2, y = y0)) +
ggtitle("") +
ylab(NULL) + xlab(NULL)
